#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DateSite.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UserDB")]
	public partial class winkdbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProfile(Profile instance);
    partial void UpdateProfile(Profile instance);
    partial void DeleteProfile(Profile instance);
    partial void InsertWALLPOST(WALLPOST instance);
    partial void UpdateWALLPOST(WALLPOST instance);
    partial void DeleteWALLPOST(WALLPOST instance);
    partial void InsertIntrest(Intrest instance);
    partial void UpdateIntrest(Intrest instance);
    partial void DeleteIntrest(Intrest instance);
    #endregion
		
		public winkdbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["UserDBConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public winkdbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public winkdbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public winkdbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public winkdbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Profile> Profiles
		{
			get
			{
				return this.GetTable<Profile>();
			}
		}
		
		public System.Data.Linq.Table<WALLPOST> WALLPOSTs
		{
			get
			{
				return this.GetTable<WALLPOST>();
			}
		}
		
		public System.Data.Linq.Table<SECURITY> SECURITies
		{
			get
			{
				return this.GetTable<SECURITY>();
			}
		}
		
		public System.Data.Linq.Table<REQUESTEDFRIEND> REQUESTEDFRIENDs
		{
			get
			{
				return this.GetTable<REQUESTEDFRIEND>();
			}
		}
		
		public System.Data.Linq.Table<Intrest> Intrests
		{
			get
			{
				return this.GetTable<Intrest>();
			}
		}
		
		public System.Data.Linq.Table<HAVINGINTREST> HAVINGINTRESTs
		{
			get
			{
				return this.GetTable<HAVINGINTREST>();
			}
		}
		
		public System.Data.Linq.Table<FRIENDSWITH> FRIENDSWITHs
		{
			get
			{
				return this.GetTable<FRIENDSWITH>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profiles")]
	public partial class Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _Email;
		
		private string _Gender;
		
		private System.Nullable<int> _Age;
		
		private string _About;
		
		private EntitySet<WALLPOST> _WALLPOSTs;
		
		private EntitySet<WALLPOST> _WALLPOSTs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnAboutChanging(string value);
    partial void OnAboutChanged();
    #endregion
		
		public Profile()
		{
			this._WALLPOSTs = new EntitySet<WALLPOST>(new Action<WALLPOST>(this.attach_WALLPOSTs), new Action<WALLPOST>(this.detach_WALLPOSTs));
			this._WALLPOSTs1 = new EntitySet<WALLPOST>(new Action<WALLPOST>(this.attach_WALLPOSTs1), new Action<WALLPOST>(this.detach_WALLPOSTs1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NChar(30)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NChar(30)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(40)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NChar(6)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_About", DbType="NVarChar(1000)")]
		public string About
		{
			get
			{
				return this._About;
			}
			set
			{
				if ((this._About != value))
				{
					this.OnAboutChanging(value);
					this.SendPropertyChanging();
					this._About = value;
					this.SendPropertyChanged("About");
					this.OnAboutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_WALLPOST", Storage="_WALLPOSTs", ThisKey="Id", OtherKey="FID")]
		public EntitySet<WALLPOST> WALLPOSTs
		{
			get
			{
				return this._WALLPOSTs;
			}
			set
			{
				this._WALLPOSTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_WALLPOST1", Storage="_WALLPOSTs1", ThisKey="Id", OtherKey="PID")]
		public EntitySet<WALLPOST> WALLPOSTs1
		{
			get
			{
				return this._WALLPOSTs1;
			}
			set
			{
				this._WALLPOSTs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WALLPOSTs(WALLPOST entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_WALLPOSTs(WALLPOST entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void attach_WALLPOSTs1(WALLPOST entity)
		{
			this.SendPropertyChanging();
			entity.Profile1 = this;
		}
		
		private void detach_WALLPOSTs1(WALLPOST entity)
		{
			this.SendPropertyChanging();
			entity.Profile1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WALLPOST")]
	public partial class WALLPOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _POSTID;
		
		private int _PID;
		
		private string _POST;
		
		private int _FID;
		
		private EntityRef<Profile> _Profile;
		
		private EntityRef<Profile> _Profile1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPOSTIDChanging(int value);
    partial void OnPOSTIDChanged();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnPOSTChanging(string value);
    partial void OnPOSTChanged();
    partial void OnFIDChanging(int value);
    partial void OnFIDChanged();
    #endregion
		
		public WALLPOST()
		{
			this._Profile = default(EntityRef<Profile>);
			this._Profile1 = default(EntityRef<Profile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int POSTID
		{
			get
			{
				return this._POSTID;
			}
			set
			{
				if ((this._POSTID != value))
				{
					this.OnPOSTIDChanging(value);
					this.SendPropertyChanging();
					this._POSTID = value;
					this.SendPropertyChanged("POSTID");
					this.OnPOSTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._Profile1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POST", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string POST
		{
			get
			{
				return this._POST;
			}
			set
			{
				if ((this._POST != value))
				{
					this.OnPOSTChanging(value);
					this.SendPropertyChanging();
					this._POST = value;
					this.SendPropertyChanged("POST");
					this.OnPOSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FID", DbType="Int NOT NULL")]
		public int FID
		{
			get
			{
				return this._FID;
			}
			set
			{
				if ((this._FID != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFIDChanging(value);
					this.SendPropertyChanging();
					this._FID = value;
					this.SendPropertyChanged("FID");
					this.OnFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_WALLPOST", Storage="_Profile", ThisKey="FID", OtherKey="Id", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.WALLPOSTs.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.WALLPOSTs.Add(this);
						this._FID = value.Id;
					}
					else
					{
						this._FID = default(int);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_WALLPOST1", Storage="_Profile1", ThisKey="PID", OtherKey="Id", IsForeignKey=true)]
		public Profile Profile1
		{
			get
			{
				return this._Profile1.Entity;
			}
			set
			{
				Profile previousValue = this._Profile1.Entity;
				if (((previousValue != value) 
							|| (this._Profile1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile1.Entity = null;
						previousValue.WALLPOSTs1.Remove(this);
					}
					this._Profile1.Entity = value;
					if ((value != null))
					{
						value.WALLPOSTs1.Add(this);
						this._PID = value.Id;
					}
					else
					{
						this._PID = default(int);
					}
					this.SendPropertyChanged("Profile1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SECURITY")]
	public partial class SECURITY
	{
		
		private int _PID;
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private bool _VISIBILITY;
		
		public SECURITY()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this._PID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this._USERNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this._PASSWORD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VISIBILITY", DbType="Bit NOT NULL")]
		public bool VISIBILITY
		{
			get
			{
				return this._VISIBILITY;
			}
			set
			{
				if ((this._VISIBILITY != value))
				{
					this._VISIBILITY = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REQUESTEDFRIEND")]
	public partial class REQUESTEDFRIEND
	{
		
		private int _UID;
		
		private int _FRID;
		
		public REQUESTEDFRIEND()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL")]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FRID", DbType="Int NOT NULL")]
		public int FRID
		{
			get
			{
				return this._FRID;
			}
			set
			{
				if ((this._FRID != value))
				{
					this._FRID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Intrests")]
	public partial class Intrest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public Intrest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HAVINGINTREST")]
	public partial class HAVINGINTREST
	{
		
		private int _PID;
		
		private int _IID;
		
		public HAVINGINTREST()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this._PID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", DbType="Int NOT NULL")]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this._IID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FRIENDSWITH")]
	public partial class FRIENDSWITH
	{
		
		private int _UID;
		
		private int _FID;
		
		public FRIENDSWITH()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL")]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FID", DbType="Int NOT NULL")]
		public int FID
		{
			get
			{
				return this._FID;
			}
			set
			{
				if ((this._FID != value))
				{
					this._FID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
